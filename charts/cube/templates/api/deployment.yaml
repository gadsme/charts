apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-api" (include "cube.fullname" .) }}
  labels:
    {{- include "cube.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- toYaml .Values.commonLabels | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- toYaml .Values.commonAnnotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.api.apiCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: api
      {{- include "cube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: api
        {{- include "cube.selectorLabels" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- toYaml .Values.commonLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.commonAnnotations }}
      annotations:
      {{- toYaml .Values.commonAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      serviceAccountName: {{ template "cube.api.serviceAccountName" . }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if and .Values.config.gitSync.enabled }}
          {{- include "git_sync_container" (dict "Values" .Values "is_init" "true" "Template" .Template) | nindent 8 }}
        {{- end }}
        {{- if .Values.config.initContainers }}
          {{- toYaml .Values.config.initContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: cube
          {{- if .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:v{{ .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.config.apiPort }}
              protocol: TCP
            {{- if .Values.config.pgSqlPort }}
            - name: pgsql
              containerPort: {{ .Values.config.pgSqlPort }}
              protocol: TCP
            {{- end }}
          env:
            {{- include "cube.env" . | nindent 12 }}
            {{- if .Values.extraEnvVars }}
            {{- include "cube.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.api.extraEnvVars }}
            {{- include "cube.tplvalues.render" (dict "value" .Values.api.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.extraEnvVarsFromConfigMap .Values.extraEnvVarsFromSecret .Values.api.extraEnvVarsFromConfigMap .Values.api.extraEnvVarsFromSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsFromConfigMap }}
            - configMapRef:
                name: {{ include "cube.tplvalues.render" (dict "value" .Values.extraEnvVarsFromConfigMap "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsFromSecret }}
            - secretRef:
                name: {{ include "cube.tplvalues.render" (dict "value" .Values.extraEnvVarsFromSecret "context" $) }}
            {{- end }}
            {{- if .Values.api.extraEnvVarsFromConfigMap }}
            - configMapRef:
                name: {{ include "cube.tplvalues.render" (dict "value" .Values.api.extraEnvVarsFromConfigMap "context" $) }}
            {{- end }}
            {{- if .Values.api.extraEnvVarsFromSecret }}
            - secretRef:
                name: {{ include "cube.tplvalues.render" (dict "value" .Values.api.extraEnvVarsFromSecret "context" $) }}
            {{- end }}
          {{- end }}
          {{- if .Values.api.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.api.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.api.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.api.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.api.livenessProbe.failureThreshold }}
            httpGet:
              path: /livez
              port: http
          {{- else if .Values.api.customLivenessProbe }}
          livenessProbe:
            {{- toYaml .Values.api.customLivenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.api.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.api.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.api.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.api.readinessProbe.failureThreshold }}
            httpGet:
              path: /readyz
              port: http
          {{- else if .Values.api.customReadinessProbe }}
          readinessProbe:
            {{- toYaml .Values.api.customReadinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.api.resources }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if or .Values.config.gitSync.enabled }}
            {{- include "git_sync_mount" . | nindent 12 }}
          {{- end }}
          {{- if .Values.config.volumeMounts }}
            {{- toYaml .Values.config.volumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.api.affinity }}
      affinity:
        {{- toYaml .Values.api.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.api.tolerations }}
      tolerations:
        {{- toYaml .Values.api.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.api.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.api.spreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.api.spreadConstraints | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.config.gitSync.enabled }}
        - name: schemas
          emptyDir: {{- toYaml (default (dict) .Values.config.gitSync.emptyDirConfig) | nindent 12 }}
        {{- end }}
        {{- if and .Values.config.gitSync.enabled (or .Values.config.gitSync.sshKeySecret .Values.config.gitSync.sshKey) }}
          {{- include "git_sync_ssh_key_volume" . | nindent 8 }}
        {{- end }}
        {{- if and  .Values.config.gitSync.enabled  .Values.config.gitSync.knownHosts }}
          {{- include "git_sync_known_hosts_volume" . | nindent 8 }}
        {{- end }}
        {{- if .Values.config.volumes }}
          {{- toYaml .Values.config.volumes | nindent 8 }}
        {{- end }}
